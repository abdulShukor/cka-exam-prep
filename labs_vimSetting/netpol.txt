
  ...
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          user: alice
      podSelector:
        matchLabels:
          role: client
  ...

Allowed ingress from pod that has labels role: client and that exists in namespace with label user: alice. All one item in the list. Pod from thennamespace 

 ...
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          user: alice
    - podSelector:
        matchLabels:
          role: client
  ...

All the pods from from namespace with label  user: are allowed 
Pod in local scope with label is allowed role: client
Two item in the list 

 kubectl label namespace frontend namespace=frontend
 kubectl label namespace backend namespace=backend

...
    - namespaceSelector:
        matchLabels:
          project: myproject

 - namespaceSelector:
        matchExpressions:
        - key: namespace
          operator: In.  // equal, exists,
          values: ["frontend", "backend"]

...

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ingress-to-web-test
  namespace: default
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  ingress:
  - ports:
    - protocol: TCP
      port 80
...

This policy will allow DNS requests to be made in the namespace if the default deny policy was previously applied:

...
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-allow-dns
spec:
  podSelector: {}
  policyTypes:
  - Egress
  egress:
  - ports:
    - port: 53
      protocol: TCP
    - port: 53
      protocol: UDP
...

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: np-backend
  namespace: project-snake
spec:
  podSelector:
    matchLabels:
      app: backend
  policyTypes:
  - Egress
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: db1
    ports:
    - port: 1111
  - to:
    - podSelector:
        matchLabels:
          app: db2
    ports:
    - port: 2222
...

Q - 72,97,99

