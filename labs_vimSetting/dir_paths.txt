
Service range check the api-server: 

k get pods -n kube-system kube-apiserver-controlplane -o yaml | grep -i  service
 - --service-cluster-ip-range=10.96.0.0/12


CNI Plugin:
ls -la /etc/cni/net.d/ 
cat /etc/cni/net.d/10-flannel.conflist


kubeadm version
kubelet --version
kubectl version or k get nodes, version is the kubectl 


kubeadm token create --print-join-command: Copy the output and paste it on node cluster3-worker2 to join the cluster 


cat /etc/kubernetes/manifests/kube-apiserver.yaml |grep crt
openssl x509 -in /etc/kubernetes/pki/apiserver.crt -text|grep -i validity -A2 // A2 means two line



Kubelet:
vi /etc/kubernetes/kubelet.conf  // kubelet api server configuration 
Ssh node01
ps aux | grep -i kubelet
get the configuration path from --config=/var/lib/kubelet/config.yaml in this case
Get the static pods path:
cat /var/lib/kubelet/config.yaml|grep staticPod 
grep staticPod /var/lib/kubelet/config.yaml
staticPodPath: /etc/kubernetes/manifests


cat /lib/systemd/system/kubelet.service
Check for the path: ExecStart=/usr/bin/kubelet


Look for  ExecStart=/usr/bin/kubelet


failed to load kubelet config file /var/lib/kubelet/config.yaml
View this file and inspect it:
ps aux|grep kubelet|grep -i config
grep -i staticPod /var/lib/kubelet/config.yaml
ls -la /etc/kubernetes/manifests/


k get pods -n kube-system kube-apiserver-controlplane | grep -i service



vi /etc/systemd/system/etcd.service // location	 of etcd service when running as remote 


If want to know if you api server the right port of etcd check the etcd port at first place 

kubelet.service.d meaning directory just name has dots and given more specific name 

/var/ meaning inside the var dirs 
/var may have the dir or not 


API logs 

/var/log/pods
/var/log/containers
crictl ps + crictl logs
docker ps + docker logs (in case when Docker is used)
kubelet logs: /var/log/syslog or journalctl
Tails -f /var/log/containers

k get ns --show-labels
k -n default run nginx --image=nginx:1.21.5-alpine --restart=Never -i --rm  -- curl -m 1 microservice1.space2.svc.cluster.local



